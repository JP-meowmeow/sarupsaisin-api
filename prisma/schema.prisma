// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id                   Int          @id @default(autoincrement())
  email                String       @unique
  password             String?
  resetPasswordToken   String?      @unique
  resetPasswordExpires DateTime?
  role                 roles        @default(USER)
  enabled              Boolean      @default(true)
  createdAt            DateTime     @default(now())
  updatedAt            DateTime     @updatedAt
  createdArticle       Article[]
  createdCourse        Course[]
  enrollments          Enrollment[]
}

model Enrollment {
  id         Int      @id @default(autoincrement())
  user       User     @relation(fields: [userId], references: [id])
  userId     Int
  course     Course   @relation(fields: [courseId], references: [id])
  courseId   Int
  slipLink   String
  status     status   @default(PENDING)
  enrolledAt DateTime @default(now()) // When the user purchased the course
}

enum status {
  PENDING
  DONE
}

enum roles {
  ADMIN
  USER
}

model Article {
  id                   Int        @id @default(autoincrement())
  articleName          String     @unique
  articleDetails       String     @db.LongText
  createdDate          DateTime   @default(now()) @db.Timestamp(0)
  updatedDate          DateTime   @updatedAt @db.Timestamp(0)
  articleThumbnailLink String
  category             categories @default(JLPTN4)
  User                 User?      @relation(fields: [userId], references: [id])
  userId               Int?
}

enum categories {
  JLPTN5
  JLPTN4
  JLPTN3
  OTHER
}

model Course {
  id                  Int          @id @default(autoincrement())
  courseName          String
  shortDescription    String
  longDescription     String       @db.LongText
  courseThumbnailLink String
  price               Decimal      @db.Decimal(10, 2)
  sold                Int?         @default(0)
  isFree              isCourseFree
  createdAt           DateTime     @default(now())
  updatedAt           DateTime     @updatedAt
  category            categories   @default(JLPTN4)
  user                User?        @relation(fields: [userId], references: [id])
  userId              Int?
  unit                Unit[]
  Enrollment          Enrollment[]
}

enum isCourseFree {
  FREE
  NOTFREE
}

model Unit {
  id          Int     @id @default(autoincrement())
  unitNumber  Int
  title       String
  description String?
  youtubeLink String

  Course   Course? @relation(fields: [courseId], references: [id])
  courseId Int?
}
